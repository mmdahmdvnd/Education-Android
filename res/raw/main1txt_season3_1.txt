import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import android.os.Bundle;
import android.os.Environment;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import android.app.Activity;

public class Main extends Activity {

 //تعریف ویجتهای بکار رفته در layout :
	private EditText txt;
	private Button save;
	private Button clear;
	private Button open;
	
	
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
      
//برقرار کردن اتصال ویجتهای layout با کدهای جاوا : 
        txt=(EditText) findViewById(R.id.txt);
        save=(Button) findViewById(R.id.save);
        clear=(Button) findViewById(R.id.clear);
        open=(Button) findViewById(R.id.open);
        exit=(Button) findViewById(R.id.exit);
        
        
        save.setOnClickListener(new OnClickListener(){
			public void onClick(View arg0) {
//فراخوانی تابع ()writetxtfile که در زیر تعریف شده ، با دو آرگومان . (با فشردن کلید save یک فایل متنی با نام test2 در پوشه ی note در حافظه ی دستگاه بوجود میاید و متن نوشته شده در ادیت تکست txt در آن چاپ میشود( پوشه ی note درون تابع writetxtfile تعریف شده است)):
				writetxtfile("test2.txt", txt.getText().toString());
			}
        });

 //دکمه open متن نوشته شده در فایل متنی test2 را در تکست ویو چاپ میکند :      
        open.setOnClickListener(new OnClickListener(){
			public void onClick(View arg0) {
//فراخوانی تابع ()readtxtfile با یک آرگومان :
				readtxtfile("/note/test2.txt");
			}
        });

 //دکمه clear متن موجود در فایل متنی test2 را پاک میکند :     
        clear.setOnClickListener(new OnClickListener(){
			public void onClick(View arg0) {
				txt.setText("");
			}
        });


     
       
        
    }
  
//دو تابع زیر عمل خواندن و نوشتن در فایل را انجام میدهند :
// عبارت  (dir,name)File dir = new File یک فایل با نام name را در مسیر dir ایجاد میکند :
//عبارت Environment.getExternalStorageDirectory آدرس حافظه ی دستگاه میباشد :

    private void writetxtfile(String name,String matn){  	
    	  try{ 		
  
//یک فایل با نام note و در حافظه دستگاه ایجاد میکند :
    	        File dir=new File(Environment.getExternalStorageDirectory(),"note");
    	        if(!dir.exists()){
    	        	dir.mkdir();
    	        } 	
        
    	        File txt=new File(dir,name);
    	        FileWriter w=new FileWriter(txt);
    	        w.append(matn);
    	        w.close();	        
    	        Toast.makeText(getApplicationContext(), "File Created !!", Toast.LENGTH_LONG).show();
    	        
    	       }catch(IOException e){
    	    	   Toast.makeText(getApplicationContext(), "File Not Created !!", Toast.LENGTH_LONG).show();
    	       } 	
    }

//عبارت card+path آدرس همان فایل متنی است که در حافظه دستگاه بوجود میاید :
(عمل خواندن و نوشتن در فایل طبق دستورات موجود در جاوا برای اینکار ، میباشند)
    private void readtxtfile(String path){

    	try{
    	String card =Environment.getExternalStorageDirectory().toString();
    	BufferedReader r=new BufferedReader(new FileReader(card+path));
    	String line="";
    	String all="";
    	
    	while((line=r.readLine())!=null){		
    		all=all+line;
    		all=all+"\n";		
    	}
    	
    	txt.setText(all);
    	
    	Toast.makeText(getApplicationContext(), "Read Comleted !!", Toast.LENGTH_LONG).show();
    		
    	}catch(IOException e){		
    		Toast.makeText(getApplicationContext(), "Read Not Comleted !!", Toast.LENGTH_LONG).show();
    	}
    	
    }
    
}
